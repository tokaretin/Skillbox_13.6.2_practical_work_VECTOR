/*Задача 2
Что нужно сделать
С помощью списка инициализации задаётся вектор цен на продукты (дробными числами). 
Таким же образом с помощью списка инициализации задаётся вектор покупок (в виде индексов),
которые совершает человек. Необходимо вывести на экран итоговую стоимость покупок. Вектор цен и вектор
покупок можно задать напрямую в коде.

Пример выполнения
// Вектор цен выглядит так: {2.5, 4.25, 3.0, 10.0}.

std::vector<float> prices {2.5, 4.25, 3.0, 10.0};

// Вектор покупок: {1, 1, 0, 3}, то есть два товара по индексу 1 и по одному — индексов 0 и 3.

std::vector<int> items {1, 1, 0, 3};

Суммарная стоимость будет равна 21.0.

Советы и рекомендации
При получении итоговой стоимости покупок не нужно делать циклы по обоим векторам, достаточно одного цикла.

Что оценивается
Программа не допускает выхода за границы вектора цен.*/

#include <iostream>
#include <vector>

int main()
{
    // С помощью списка инициализации задаётся вектор цен на продукты (дробными числами). 
    // Таким же образом с помощью списка инициализации задаётся вектор покупок (в виде индексов),
    // Вектор цен и вектор покупок можно задать напрямую в коде.
    std::vector<float> prices {2.5, 4.25, 3.0, 10.0};
    std::vector<int> items {1, 1, 0, 3};

    // переменный для хранения итоговой стоймости покупок
    float totalCost = 0.0f;

    // перебераем элементы вектора покупок
    for (int i = 0; i < items.size(); i++)
    {
        int index = items[i]; // получаем индекс товара

        // проверям индекс, есть ли он
        if (index >= 0 && index < prices.size())
        {
            totalCost += prices[index]; // увеличиваем totalCost прибавляя цену товара по индексу index
        }
        else
        {
            std::cout << "Invalid item index: " << index << '\n';
        }
    }

    // Необходимо вывести на экран итоговую стоимость покупок.
    if (totalCost > 0.0f)
    {
        std::cout << '\n' << "Total cost of purchase: " << totalCost << '\n'; // итоговая стоимость покупок
    }
    else
    {
        std::cout << "No items for purchase." << std::endl;
    }    
}

